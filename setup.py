#!/usr/bin/env python
# coding=utf-8
"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app
"""
import sys
import distribute_setup
distribute_setup.use_setuptools()

from setuptools import setup, find_packages

version_string = '0.5.4'


# Defaults for py2app / cx_Freeze
default_build_options=dict(
    packages=['PySide','numpy'],
    excludes=['matplotlib', "scipy", "_xmlplus"]
    )



try:
    import py2app
except:
    build_py2app = None
else:
    # py2app setup
    
    build_py2app = dict(
                    iconfile='metapath/static/icon.icns',
                    #'_ssl', 'doctest', 'pdb', 'unittest', 'difflib', 'inspect',],
                    site_packages=True,
                    optimize=2,
                    resources=['metapath/static', 'examples', 'metapath/db', 'metapath/identities', 'metapath/html','metapath/icons'],
                    plist=dict(
                        CFBundleName               = "MetaPath",
                        CFBundleShortVersionString = version_string,     # must be in X.X.X format
                        CFBundleGetInfoString      = "MetaPath %s" % version_string,
                        CFBundleExecutable         = "MetaPath",
                        CFBundleIdentifier         = "com.ables.metapath",
                    ),
                )
    build_py2app.update( default_build_options )

try:
    from cx_Freeze import setup, Executable
except:
    build_exe = None
    build_mac = None
    excutables = None
else:
    # cx_Freeze setup
    base = None
    exceutables = None

    build_exe = dict()
    build_mac = dict()
    
    base = None
    if sys.platform == "win32":
        base = "Win32GUI"
    # cx_freeze GUI applications require a different base on Windows (the default is for a
    # console application).
    executables=Executable("metapath/metapath_gui.py", base=base),

    # Apply default build options to cx/py2app build targets
    build_exe.update( default_build_options )
    build_mac.update( default_build_options )



setup(

    name='metapath',
    version=version_string,
    author='Martin Fitzpatrick',
    author_email='martin.fitzpatrick@gmail.com',
    url='https://github.com/mfitzp/metapath',
    download_url='http://github.com/mfitzp/metapath',
    description='Metabolic pathway visualisation and analysis.',
    long_description='MetaPath is a tool for the analysis of metabolic pathway and \
        associated visualisation of experimental data. Built on the MetaCyc database it \
        provides an interactive map in which multiple pathways can be simultaneously \
        visualised. Multiple annotations from the MetaCyc database are available including \
        synonyms, associated reactions and pathways and database unification links.',

    packages = find_packages(),
    include_package_data = True,
    package_data = {
        '': ['*.txt', '*.rst', '*.md'],
    },
    exclude_package_data = { '': ['README.txt'] },

    entry_points = {
        'console_scripts': [
            'metapath = metapath.metapath:main',
        ],
        'gui_scripts': [
            'metapath-gui = metapath.metapath_gui:main',
        ]
    },

    install_requires = ['PySide>=1.1.1','numpy>=1.5.0'],

    keywords='bioinformatics metabolomics research analysis science',
    license='GPL',
    classifiers=['Development Status :: 4 - Beta',
               'Natural Language :: English',
               'Operating System :: OS Independent',
               'Programming Language :: Python :: 2',
               'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
               'Topic :: Scientific/Engineering :: Bio-Informatics',
               'Topic :: Education',
               'Intended Audience :: Science/Research',
               'Intended Audience :: Education',
              ],

    # cx_freeze/py2app settings for building the .app file
    options={
            "build_exe": build_exe,
            "build_mac": build_mac,
            'py2app': build_py2app, 
    },
    app=[ 'metapath/metapath_gui.py' ],
    executables=executables,

    )